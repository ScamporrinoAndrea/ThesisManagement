#### get the list of employe
## Note Front End:
##
##  Per la insert della Tesi:
##  - serve: nulla (ritornare un res status 200) 
##  - mandiamo: accessToken del professore (verifica sia un prof), titolo, ID teacher, lista Id co-supervisors, lista keywords, 
##              lista di types, stringa "required knowledge", stringa "notes", stringa "description", expiration date, stringa level, stringa Cds
##
##  Per la visualizzazione delle tesi:
##  - serve: lista di oggetti Tesi con ID, titolo, tipi (in teoria servirebbero solo quello "abroad" e/o "in company" (magari si può fare un filtro backend oppure front end)
##  , supervisore (no co-supervisor), Keywords, description (di tutte le tesi), required knowledge e notes del corso di laurea dello studente che ne fa richiesta  
##  - mandiamo: token di accesso ( fare retrieve delle info dello studente per recuperare il corso)
##
##  Per la visualizzazione delle tesi con filtro:
##  - serve: stessa cosa di sopra
##  - mandiamo: token di accesso ( fare retrieve delle info dello studente per recuperare il corso), lista di: supervisor, co-supervisor, keywords, groups, types, 
##    expiration date (si manda data "massima" quindi vogliamo quelli che sono VALIDI entro quella data, non quelli che scadono)
##
##  Per la visualizzazione del filtro e anche per l'inserimento di una tesi:
##  - serve: una serie di GET: lista di teacher (solo Id e nome e cognome),  list di Groups
##  - mandiamo: access token (giusto per verificare che sia ancora loggato)
##
## Per la visualizzazione di una tesi:
##  - serve: un oggetto Tesi con tutti i campi (array di: Keywords, Types, Groups, Co-supervisors)
##  - mandiamo: access token ( magari per controllare se può vederla, check sul corso di laurea), ID della tesi
##
##  Per la visualizzazione delle tesi di un professore:
##  - serve: lista di oggetti Tesi con ID, titolo, tipi (in teoria servirebbero solo quello "abroad" e/o "in company" (magari si può fare un filtro backend oppure front end)
##  , supervisore (no co-supervisor), Keywords, description (di tutte le tesi), required knowledge e notes del corso di laurea dello studente che ne fa richiesta  
##  - mandiamo: token di accesso del professore

## Se viene in mente altro aggiungiamo :)


##### get per le keywords nell'inserimento di una tesi
GET http://localhost:3001/api/keywords HTTP/1.1
Content-Type: application/json

##### get per le keywords nell'inserimento di una tesi
GET http://localhost:3001/api/types HTTP/1.1
Content-Type: application/json

##### get per le keywords nell'inserimento di una tesi
GET http://localhost:3001/api/teachers HTTP/1.1
Content-Type: application/json

##### get per le keywords nell'inserimento di una tesi
GET http://localhost:3001/api/cds HTTP/1.1
Content-Type: application/json


 
##### get the list of groups correlated to a thesis (by supervisor and co supervisor) ####                             
GET http://localhost:3001/api/thesis/5/groups HTTP/1.1
Content-Type: application/json
 
{
}

#########
GET http://localhost:3001/api/thesis/3 HTTP/1.1
Contenty-Type: application/json

{
}


#### insert of a thesis ####                                         
POST http://localhost:3001/api/insert/thesis HTTP/1.1  
Content-Type: application/json

#ricordae inserimenti in THSIS_STATUS, KEYWORDS, CO_SUPERVISORS 
{
    "title":"The best thesis in the world",
    "description":"Best thesis to do man!",
    "required_knowledge":"programming, soft skills...",
    "notes":"Best thesis in the world",
    "expiration_date":"20/12/2023",
    "level":"MSc",
    "degree":"LM-53",
    "supervisor" : "d123457",
    "types" : ["EXPERIMENTAL"],
    "co_supervisors" : [
        {"name":"Carlo", "surname":"Rafele", "email":"d123461@polito.it"},
        {"name":"Antonio", "surname":"Vetrò", "email":"d123463@polito.it"},
        {"name":"Lorenza", "surname":"Maggio", "email":"maggio_lorenza@lamborghini.it"}
    ],
    "keywords":["AEREOSPACE", "SECURITY", "MUD"]
}


##########                                    
POST http://localhost:3001/api/thesis/5/proposal HTTP/1.1  
Content-Type: application/json

{
    
}

##########  API THESIS                         
POST http://localhost:3001/api/thesis HTTP/1.1  
Content-Type: application/json

{
    "filters":{
        "type" : ["EXPERIMENTAL"], 
        "keyword" : ["ALGORITHM FAIRNESS", "SYNTHETIC DATA"],
        "cosupervisor" : ["d123463@polito.it"],
        "supervisor" : ["d123456"],
        "group" :["GR-16"],
        "exp_date" : ["10/12/2023"]
    }
}



########### API TEST FILTER
POST http://localhost:3001/api/thesis/filter HTTP/1.1  
Content-Type: application/json

{
    "filters":{
        "type" : ["EXPERIMENTAL"], 
        "keyword" : ["ALGORITHM FAIRNESS", "SYNTHETIC DATA"],
        "cosupervisor" : ["d123463@polito.it"],
        "supervisor" : "d123456",
        "group" :["GR-16"],
        "exp_date" : "10/12/2023"
    }
}

##########  
POST http://localhost:3001/api/thesis HTTP/1.1  
Content-Type: application/json

{

}



########## prova senza autenticazione                              
POST http://localhost:3001/api/thesis/filter HTTP/1.1  
Content-Type: application/json

{
    "filters":{
        "type" : ["EXPERIMENTAL"], 
        "keyword" : ["ALGORITHM FAIRNESS", "SYNTHETIC DATA"],
        "cosupervisor" : ["d123463@polito.it"],
        "supervisor" : ["d123456"],
        "group" :["GR-16"],
        "exp_date" : ["10/12/2023"]
    }
}

##########  
POST http://localhost:3001/api/thesis/filter HTTP/1.1  
Content-Type: application/json

{

}
